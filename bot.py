import asyncio
import os
from aiogram import Bot, Dispatcher, types
from aiogram.types import Message, InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import CommandStart

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π –æ–∫—Ä—É–∂–µ–Ω–∏—è
TOKEN = os.getenv("TOKEN")

if not TOKEN:
    raise ValueError("–û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è TOKEN –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞!")

# ID –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤, –∫–æ—Ç–æ—Ä—ã–º –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å –∑–∞–∫–∞–∑—ã (–∑–∞–º–µ–Ω–∏ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ ID)
MANAGER_IDS = [631954003]  # <-- –í—Å—Ç–∞–≤—å Telegram ID –º–µ–Ω–µ–¥–∂–µ—Ä–æ–≤

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher()

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
main_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üì± iPhone", callback_data="category_iphone")],
])

# –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π iPhone
iphone_models = [
    "16_pro_max", "16_pro", "16_plus", "15_pro_max", "15_pro", "15_plus",
    "14_pro_max", "14_pro", "14_plus", "14", "13_pro_max", "13_pro", "13",
    "12_pro_max", "12_pro", "12", "11_pro_max", "11_pro", "11",
    "xr", "xs_max", "xs", "x", "8_plus", "8", "7_plus", "7"
]

# –ú–µ–Ω—é –º–æ–¥–µ–ª–µ–π iPhone
iphone_menu = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text=f"iPhone {model.replace('_', ' ').title()}", callback_data=f"iphone_{model}")]
    for model in iphone_models
] + [[InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_main")]])

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –∫–∞–∂–¥–æ–π –º–æ–¥–µ–ª–∏
def generate_subcategories(model):
    return InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(text="–ö–æ—Ä–ø—É—Å", callback_data=f"corpus_{model}")],
        [InlineKeyboardButton(text="–î–∏—Å–ø–ª–µ–π", callback_data=f"display_{model}")],
        [InlineKeyboardButton(text="–û—Å–Ω–æ–≤–Ω–∞—è –∫–∞–º–µ—Ä–∞", callback_data=f"camera_main_{model}")],
        [InlineKeyboardButton(text="–§—Ä–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞", callback_data=f"camera_front_{model}")],
        [InlineKeyboardButton(text="–ê–∫–∫—É–º—É–ª—è—Ç–æ—Ä", callback_data=f"battery_{model}")],
        [InlineKeyboardButton(text="–®–ª–µ–π—Ñ –∑–∞—Ä—è–¥–∫–∏", callback_data=f"flex_{model}")],
        [InlineKeyboardButton(text="–î–∏–Ω–∞–º–∏–∫", callback_data=f"speaker_{model}")],
        [InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_iphone")],
    ])

# –ü–æ–¥–∫–ª—é—á–∞–µ–º –ø–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –∫–æ –≤—Å–µ–º –º–æ–¥–µ–ª—è–º
subcategories_menu = {f"iphone_{model}": generate_subcategories(model) for model in iphone_models}

# –¢–æ–≤–∞—Ä—ã –¥–ª—è –∫–∞–∂–¥–æ–π –º–æ–¥–µ–ª–∏ iPhone
products = {
    # iPhone 16 Pro Max
    "corpus_16_pro_max": [
        ("–°—Ä–µ–¥–Ω—è—è —á–∞—Å—Ç—å", "18,000‚ÇΩ", "order_16_pro_max_mid"),
        ("–ó–∞–¥–Ω—è—è –∫—Ä—ã—à–∫–∞", "21,000‚ÇΩ", "order_16_pro_max_back"),
    ],
    "display_16_pro_max": [
        ("–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Å–Ω—è—Ç—ã–π –¥–∏—Å–ø–ª–µ–π", "44,000‚ÇΩ (–∏–¥–µ–∞–ª)", "order_16_pro_max_display"),
    ],
    "camera_main_16_pro_max": [
        ("–û—Å–Ω–æ–≤–Ω–∞—è –∫–∞–º–µ—Ä–∞", "9,000‚ÇΩ", "order_16_pro_max_main_camera"),
    ],
    "camera_front_16_pro_max": [
        ("–§—Ä–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞", "2,500‚ÇΩ", "order_16_pro_max_front_camera"),
    ],

    # iPhone 15 Pro Max
    "corpus_15_pro_max": [
        ("–°—Ä–µ–¥–Ω—è—è —á–∞—Å—Ç—å", "10,000‚ÇΩ", "order_15_pro_max_mid"),
        ("–ó–∞–¥–Ω—è—è –∫—Ä—ã—à–∫–∞", "23,000‚ÇΩ", "order_15_pro_max_back"),
    ],
    "display_15_pro_max": [
        ("–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Å–Ω—è—Ç—ã–π –¥–∏—Å–ø–ª–µ–π", "32,000‚ÇΩ (—Ö–æ—Ä–æ—à–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)", "order_15_pro_max_display"),
    ],
    "camera_main_15_pro_max": [
        ("–û—Å–Ω–æ–≤–Ω–∞—è –∫–∞–º–µ—Ä–∞", "3,000‚ÇΩ", "order_15_pro_max_main_camera"),
    ],
    "camera_front_15_pro_max": [
        ("–§—Ä–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞", "1,000‚ÇΩ", "order_15_pro_max_front_camera"),
    ],

    # iPhone 14 Pro Max
    "corpus_14_pro_max": [
        ("–°—Ä–µ–¥–Ω—è—è —á–∞—Å—Ç—å eSIM", "10,000‚ÇΩ", "order_14_pro_max_mid"),
        ("–ó–∞–¥–Ω—è—è –∫—Ä—ã—à–∫–∞", "21,000‚ÇΩ", "order_14_pro_max_back"),
    ],
    "display_14_pro_max": [
        ("–û—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —Å–Ω—è—Ç—ã–π –¥–∏—Å–ø–ª–µ–π", "30,000‚ÇΩ (–æ—Ç–ª–∏—á–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ)", "order_14_pro_max_display"),
    ],
    "camera_main_14_pro_max": [
        ("–û—Å–Ω–æ–≤–Ω–∞—è –∫–∞–º–µ—Ä–∞", "3,000‚ÇΩ", "order_14_pro_max_main_camera"),
    ],
    "camera_front_14_pro_max": [
        ("–§—Ä–æ–Ω—Ç–∞–ª—å–Ω–∞—è –∫–∞–º–µ—Ä–∞", "1,000‚ÇΩ", "order_14_pro_max_front_camera"),
    ],
}

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å —Ç–æ–≤–∞—Ä–∞–º–∏
def generate_product_keyboard(category):
    if category not in products:
return InlineKeyboardMarkup(inline_keyboard=[
            [InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_subcategory")]
        ])
    
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
        [InlineKeyboardButton(f"{name} - {price}", callback_data=callback)]
        for name, price, callback in products[category]
    ])
    keyboard.inline_keyboard.append([InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_subcategory")])
    return keyboard

# –§—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞
async def main():
    await bot.delete_webhook(drop_pending_updates=True)
    await dp.start_polling(bot)

if name == "__main__":
    asyncio.run(main())

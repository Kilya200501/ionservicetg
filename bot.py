import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram import Dispatcher
from aiogram.types import Message
from aiogram import Bot
import asyncio

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
TOKEN = "8083923455:AAFwD2nAD5oPSeA16TrYjAgk_X2tw49F5n4"
bot = Bot(token=TOKEN)
dp = Dispatcher(bot=bot)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ /start
@dp.message(lambda message: message.text == "/start")
async def start(message: Message):
    await message.answer("–ü—Ä–∏–≤–µ—Ç! –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç –Ω–∞ aiogram 3.x")

async def main():
    await dp.start_polling(bot)

if _name_ == "_main_":
    asyncio.run(main())

# –¢–æ–∫–µ–Ω –æ—Ç BotFather
TOKEN = "8083923455:AAFwD2nAD5oPSeA16TrYjAgk_X2tw49F5n4"

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=TOKEN)
dp = Dispatcher(bot)

# –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é (–ö–∞—Ç–µ–≥–æ—Ä–∏–∏ —Ç–æ–≤–∞—Ä–æ–≤)
main_menu = InlineKeyboardMarkup(row_width=2)
main_menu.add(
    InlineKeyboardButton("üì± iPhone", callback_data="category_iphone"),
    InlineKeyboardButton("‚åö Apple Watch", callback_data="category_watch"),
    InlineKeyboardButton("üíª MacBook", callback_data="category_macbook"),
    InlineKeyboardButton("üìü iPad", callback_data="category_ipad"),
)

# –ü–æ–¥–∫–∞—Ç–µ–≥–æ—Ä–∏–∏ iPhone (–ü—Ä–∏–º–µ—Ä)
iphone_menu = InlineKeyboardMarkup(row_width=2)
iphone_menu.add(
    InlineKeyboardButton("iPhone 16 Pro Max", callback_data="iphone_16_pro_max"),
    InlineKeyboardButton("iPhone 16 Pro", callback_data="iphone_16_pro"),
    InlineKeyboardButton("iPhone 15 Pro Max", callback_data="iphone_15_pro_max"),
    InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_main")
)

# –ó–∞–ø—á–∞—Å—Ç–∏ –¥–ª—è iPhone 16 Pro Max
iphone_16_pro_max_parts = InlineKeyboardMarkup(row_width=2)
iphone_16_pro_max_parts.add(
    InlineKeyboardButton("üîß –î–∏—Å–ø–ª–µ–π", callback_data="part_display_16_pro_max"),
    InlineKeyboardButton("üîã –ë–∞—Ç–∞—Ä–µ—è", callback_data="part_battery_16_pro_max"),
    InlineKeyboardButton("üì∏ –ö–∞–º–µ—Ä–∞", callback_data="part_camera_16_pro_max"),
    InlineKeyboardButton("üîä –î–∏–Ω–∞–º–∏–∫–∏", callback_data="part_speakers_16_pro_max"),
    InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_iphone")
)

# –ó–∞–ø—á–∞—Å—Ç–∏ –¥–ª—è iPhone 16 Pro
iphone_16_pro_parts = InlineKeyboardMarkup(row_width=2)
iphone_16_pro_parts.add(
    InlineKeyboardButton("üîß –î–∏—Å–ø–ª–µ–π", callback_data="part_display_16_pro"),
    InlineKeyboardButton("üîã –ë–∞—Ç–∞—Ä–µ—è", callback_data="part_battery_16_pro"),
    InlineKeyboardButton("üì∏ –ö–∞–º–µ—Ä–∞", callback_data="part_camera_16_pro"),
    InlineKeyboardButton("üîä –î–∏–Ω–∞–º–∏–∫–∏", callback_data="part_speakers_16_pro"),
    InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_iphone")
)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@dp.message_handler(commands=['start'])
async def start(message: types.Message):
    await message.answer("üëã –ü—Ä–∏–≤–µ—Ç! –Ø –ø–æ–º–æ—â–Ω–∏–∫ –∫–æ–º–ø–∞–Ω–∏–∏ *Ion Service*.\n"
                         "–Ø –ø–æ–º–æ–≥—É –≤–∞–º –ø–æ–¥–æ–±—Ä–∞—Ç—å –∑–∞–ø—á–∞—Å—Ç–∏ –¥–ª—è —Ç–µ—Ö–Ω–∏–∫–∏ Apple.\n\n"
                         "–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞:", reply_markup=main_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
@dp.callback_query_handler(lambda call: call.data.startswith("category_"))
async def category_callback(call: types.CallbackQuery):
    if call.data == "category_iphone":
        await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å iPhone:", reply_markup=iphone_menu)
    elif call.data == "category_watch":
        await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å Apple Watch (–º–µ–Ω—é –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ).")
    elif call.data == "category_macbook":
        await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å MacBook (–º–µ–Ω—é –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ).")
    elif call.data == "category_ipad":
        await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å iPad (–º–µ–Ω—é –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ).")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ iPhone 16 Pro Max
@dp.callback_query_handler(lambda call: call.data == "iphone_16_pro_max")
async def iphone_16_pro_max_callback(call: types.CallbackQuery):
    await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ø—á–∞—Å—Ç—å –¥–ª—è *iPhone 16 Pro Max*:", reply_markup=iphone_16_pro_max_parts)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ iPhone 16 Pro
@dp.callback_query_handler(lambda call: call.data == "iphone_16_pro")
async def iphone_16_pro_callback(call: types.CallbackQuery):
    await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –∑–∞–ø—á–∞—Å—Ç—å –¥–ª—è *iPhone 16 Pro*:", reply_markup=iphone_16_pro_parts)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é
@dp.callback_query_handler(lambda call: call.data == "back_main")
async def back_main_callback(call: types.CallbackQuery):
    await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é —Ç–æ–≤–∞—Ä–∞:", reply_markup=main_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤–æ–∑–≤—Ä–∞—Ç–∞ –≤ –º–µ–Ω—é iPhone
@dp.callback_query_handler(lambda call: call.data == "back_iphone")
async def back_iphone_callback(call: types.CallbackQuery):
    await call.message.edit_text("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å iPhone:", reply_markup=iphone_menu)

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ –∑–∞–ø—á–∞—Å—Ç–µ–π
@dp.callback_query_handler(lambda call: call.data.startswith("part_"))
async def part_callback(call: types.CallbackQuery):
    part_names = {
        "part_display_16_pro_max": "üîß –î–∏—Å–ø–ª–µ–π –¥–ª—è iPhone 16 Pro Max\nüí∞ –¶–µ–Ω–∞: 500$",
        "part_battery_16_pro_max": "üîã –ë–∞—Ç–∞—Ä–µ—è –¥–ª—è iPhone 16 Pro Max\nüí∞ –¶–µ–Ω–∞: 150$",
        "part_camera_16_pro_max": "üì∏ –ö–∞–º–µ—Ä–∞ –¥–ª—è iPhone 16 Pro Max\nüí∞ –¶–µ–Ω–∞: 200$",
        "part_speakers_16_pro_max": "üîä –î–∏–Ω–∞–º–∏–∫–∏ –¥–ª—è iPhone 16 Pro Max\nüí∞ –¶–µ–Ω–∞: 100$",
        
        "part_display_16_pro": "üîß –î–∏—Å–ø–ª–µ–π –¥–ª—è iPhone 16 Pro\nüí∞ –¶–µ–Ω–∞: 480$",
        "part_battery_16_pro": "üîã –ë–∞—Ç–∞—Ä–µ—è –¥–ª—è iPhone 16 Pro\nüí∞ –¶–µ–Ω–∞: 140$",
        "part_camera_16_pro": "üì∏ –ö–∞–º–µ—Ä–∞ –¥–ª—è iPhone 16 Pro\nüí∞ –¶–µ–Ω–∞: 190$",
        "part_speakers_16_pro": "üîä –î–∏–Ω–∞–º–∏–∫–∏ –¥–ª—è iPhone 16 Pro\nüí∞ –¶–µ–Ω–∞: 90$",
    }
    
    text = part_names.get(call.data, "–ó–∞–ø—á–∞—Å—Ç—å –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    back_button = InlineKeyboardMarkup().add(InlineKeyboardButton("‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="back_iphone"))
    
    await call.message.edit_text(text, reply_markup=back_button)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
if __name__ == '__main__':
    executor.start_polling(dp, skip_updates=True)
